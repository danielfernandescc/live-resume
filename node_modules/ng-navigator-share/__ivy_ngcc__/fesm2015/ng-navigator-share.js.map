{"version":3,"file":"ng-navigator-share.js","sources":["ng-navigator-share/lib/ng-navigator-share/ng-navigator-share.service.ts","ng-navigator-share/public_api.ts","ng-navigator-share/ng-navigator-share.ts"],"names":[],"mappings":";;;;IAKa,uBAAuB,GAApC,MAAa,uBAAuB;AACpC,IACE;AACF,QAFE,iBAAY,GAAQ,IAAI,CAAC;AAC3B,QACI,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC;AACzC,KAAG;AACH,IACE,QAAQ;AAAM,QACZ,OAAO,IAAI,CAAC,YAAY,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,SAAS,CAAC;AAC/E,KAAG;AACH,IACE,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAkD;AAC5E,QAAI,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM;AACA,YAAvC,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,SAAS,EAAE;AAC/E,gBAAQ,IACE,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI;AAC9C,qBAAW,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC,EACnC;AACV,oBAAU,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;AAChG,iBAAS;AAAE,qBAAI;AACf,oBAAU,IAAI;AACd,wBAAY,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AAC3D,4BAAc,KAAK,EAAE,KAAK;AAC1B,4BAAc,IAAI,EAAE,IAAI;AACxB,4BAAc,GAAG,EAAE,GAAG;AACtB,yBAAa,CAAC,CAAC;AACf,wBAAY,OAAO,CAAC;AACpB,4BAAc,MAAM,EAAE,IAAI;AAC1B,yBAAa,CAAC,CAAC;AACf,qBAAW;AAAE,oBAAD,OAAO,KAAK,EAAE;AAC1B,wBAAY,MAAM,CAAC;AACnB,4BAAc,MAAM,EAAE,KAAK;AAC3B,4BAAc,KAAK,EAAE,KAAK;AAC1B,yBAAa,CAAC,CAAC;AACf,qBAAW;AACX,iBAAS;AACT,aAAO;AAAE,iBAAI;AACb,gBAAQ,MAAM,CAAC;AACf,oBAAU,MAAM,EAAE,KAAK;AACvB,oBAAU,KAAK,EAAE,mDAAmD;AACpE,iBAAS,CAAC,CAAC;AACX,aAAO;AACP,SAAK,CAAA,CAAC,CAAC;AACP,KAAG;AACH;4HAAC;AACD;AA5Ca,uBAAuB,qBAHnC,UAAU,CAAC,WACV,5BAEE;AAFQ,EAAE,MAAM,OACnB,CAAC,hBAEA,GADW,uBAAuB,CA2CnC;;;;;;gDAAC;AACF;ACjDA;AACA;AACA;AAAI;ACFJ;AACC;AACC;AAED;AAAC;AACM","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgNavigatorShareService {\r\n  webNavigator: any = null;\r\n  constructor() {\r\n    this.webNavigator = window.navigator;\r\n  }\r\n\r\n  canShare(): boolean {\r\n    return this.webNavigator !== null && this.webNavigator.share !== undefined;\r\n  }\r\n\r\n  share({ title, text, url }: { title: string, text?: string, url?: string }) {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.webNavigator !== null && this.webNavigator.share !== undefined) {\r\n        if (\r\n          (text === undefined || text === null) &&\r\n          (url === undefined || url === null)\r\n        ) {\r\n          console.warn(`text and url both can't be empty, at least provide either text or url`);\r\n        } else {\r\n          try {\r\n            const isShared = await this.webNavigator.share({\r\n              title: title,\r\n              text: text,\r\n              url: url,\r\n            });\r\n            resolve({\r\n              shared: true\r\n            });\r\n          } catch (error) {\r\n            reject({\r\n              shared: false,\r\n              error: error\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        reject({\r\n          shared: false,\r\n          error: `This service/api is not supported in your Browser`\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ng-navigator-share\r\n */\r\n\r\nexport * from './lib/ng-navigator-share/ng-navigator-share.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}